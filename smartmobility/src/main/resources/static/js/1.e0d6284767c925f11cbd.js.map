{"version":3,"sources":["webpack:///src/components/Scenario.vue","webpack:///./src/components/Scenario.vue?6bfe","webpack:///./src/components/Scenario.vue"],"names":["Scenario","components","Buttons","data","buttonEvents","refresh","show","event","this","loadGrid","add","addScenario","delete","deleteScenario","execute","executeScenario","pause","pauseScenario","scenarioForm","scenarioName","userCount","loopCount","unRegisterAction","registerAction","rules","required","message","trigger","deletedScenarioData","allChecked","rowClicked","isUpdate","loading","focusIndex","dialogDeletedScenario","deletedLoading","mounted","computed","checkedRows","filter","row","selected","methods","extends_default","Object","vuex_esm","isAddAndDelete","_this","axios","get","then","response","index","scenarioList","forEach","actionList","length","resetScenarioForm","$refs","selectRow","catch","ex","console","log","loadDeletedGrid","_this2","deletedScenarioList","onAllCheckedChange","checked","map","assign_default","onCheckedChange","_this3","$nextTick","resetFields","scenarioClick","copy","actionIds","i","push","actionId","saveScenario","form","_this4","validate","valid","notification","params","scenario","scenarioId","put","post","_this5","clearSelections","_this6","$confirm","confirmButtonText","cancelButtonText","type","scenarioIds","setIsExecute","isExecute","_this7","showDeletedScenario","recoveryScenario","_this8","components_Scenario","render","_vm","_h","$createElement","_c","_self","staticStyle","width","height","text-align","attrs","region","border","_v","title","slot","staticClass","on","click","$event","ref","columnResizing","selectionMode","selectionChange","field","align","scopedSlots","_u","key","fn","scope","checkedChange","model","value","callback","$$v","expression","$set","cellCss","_s","rowIndex","halign","label-position","label-width","size","label","prop","placeholder","min","titles","filter-placeholder","filterable","visible","update:visible","_e","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"js/1.e0d6284767c925f11cbd.js","sourcesContent":["<template>\r\n    <div>\r\n        <Layout style=\"width: 100%; height: 800px\">\r\n            <LayoutPanel region=\"north\" :border=\"false\" style=\"height: 45px; text-align: right;\">\r\n                <Buttons :buttonEvents=\"buttonEvents\"/>\r\n            </LayoutPanel>\r\n            \r\n            <LayoutPanel region=\"west\" title=\"시나리오 목록\" style=\"width: 450px;\">\r\n                <template slot=\"header\">\r\n                    <div class=\"f-row\">\r\n                        <div class=\"panel-title f-full\">시나리오 목록</div>\r\n                        <LinkButton @click=\"showDeletedScenario()\">삭제된 시나리오</LinkButton>\r\n                    </div>\r\n                </template>\r\n\r\n                <DataGrid\r\n                    ref=\"scenarioList\"\r\n                    :data=\"data\"\r\n                    :columnResizing=\"true\"\r\n                    :border=\"false\"\r\n                    :loading=\"loading\"\r\n                    selectionMode=\"single\"\r\n                    @selectionChange=\"scenarioClick($event)\"\r\n                    style=\"width: 100%; height: 100%;\">\r\n\r\n                    <GridColumn field=\"ck\" width=\"30\" align=\"center\">\r\n                        <template slot=\"header\" slot-scope=\"scope\">\r\n                            <CheckBox v-model=\"allChecked\" @checkedChange=\"onAllCheckedChange($event)\"></CheckBox>\r\n                        </template>\r\n                        <template slot=\"body\" slot-scope=\"scope\">\r\n                            <CheckBox v-model=\"scope.row.selected\" @checkedChange=\"onCheckedChange($event)\"></CheckBox>\r\n                        </template>\r\n                    </GridColumn>\r\n                    \r\n                    <GridColumn cellCss=\"datagrid-td-rownumber\" width=\"50\" align=\"center\">\r\n                        <template slot=\"header\">\r\n                            No.\r\n                        </template>\r\n                        <template slot=\"body\" slot-scope=\"scope\">\r\n                            {{ scope.rowIndex + 1 }}\r\n                        </template>\r\n                    </GridColumn>\r\n                    <GridColumn field=\"scenarioName\" title=\"시나리오명\" halign=\"center\"></GridColumn>\r\n                    <GridColumn field=\"loopCount\" title=\"반복 횟수\" width=\"60\" align=\"center\"></GridColumn>\r\n                    <GridColumn title=\"등록된 동작 개수\" align=\"center\">\r\n                        <template slot=\"body\" slot-scope=\"scope\">\r\n                            {{ scope.row.actionList.length }}\r\n                        </template>\r\n                    </GridColumn>\r\n                </DataGrid>\r\n            </LayoutPanel>\r\n\r\n            <LayoutPanel region=\"center\" title=\"시나리오 내용\" style=\"width: 100%; height: 100%;\">\r\n                <el-form ref=\"scenarioForm\" :model=\"scenarioForm\" :rules=\"rules\" label-position=\"left\" label-width=\"100px\" size=\"mini\">\r\n                    <el-form-item label=\"시나리오명\" prop=\"scenarioName\">\r\n                        <el-input v-model=\"scenarioForm.scenarioName\" placeholder=\"예약모듈 시나리오\"></el-input>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"반복 횟수\" prop=\"loopCount\">\r\n                        <el-input-number v-model=\"scenarioForm.loopCount\" :min=\"1\"></el-input-number>\r\n                    </el-form-item>\r\n\r\n                    <el-transfer\r\n                        :data=\"unRegisterAction\"\r\n                        v-model=\"registerAction\"\r\n                        :titles=\"['미등록 동작', '등록된 동작']\"\r\n                        filter-placeholder=\"검색어 입력\"\r\n                        filterable>\r\n                    </el-transfer>\r\n\r\n                    <el-form-item>\r\n                        <el-button type=\"info\" @click=\"saveScenario('scenarioForm')\">저장</el-button>\r\n                    </el-form-item>\r\n                </el-form>\r\n            </LayoutPanel>\r\n        </Layout>\r\n\r\n        <el-dialog title=\"삭제된 시나리오 목록\" :visible.sync=\"dialogDeletedScenario\" width=\"800px\">\r\n            <span v-if=\"deletedScenarioData.length == 0\">삭제된 시나리오가 없습니다</span>\r\n            <DataGrid\r\n                v-if=\"deletedScenarioData.length != 0\"\r\n                :data=\"deletedScenarioData\"\r\n                :loading=\"deletedLoading\"\r\n                style=\"height: 400px;\">\r\n                <GridColumn align=\"center\" cellCss=\"datagrid-td-rownumber\" width=\"30\">\r\n                    <template slot=\"header\">\r\n                        No.\r\n                    </template>\r\n                    <template slot=\"body\" slot-scope=\"scope\">\r\n                        {{ scope.rowIndex + 1 }}\r\n                    </template>\r\n                </GridColumn>\r\n                <GridColumn field=\"scenarioName\" title=\"시나리오명\" halign=\"center\"></GridColumn>\r\n                <GridColumn field=\"loopCount\" title=\"반복 횟수\" align=\"center\"></GridColumn>\r\n                <GridColumn field=\"registerActionCount\" title=\"등록된 동작 개수\" align=\"center\"></GridColumn>\r\n                <GridColumn field=\"delDt\" title=\"삭제일시\" align=\"center\"></GridColumn>\r\n                <GridColumn title=\"\" width=\"50\" align=\"center\">\r\n                    <template slot=\"body\" slot-scope=\"scope\">\r\n                        <LinkButton @click=\"recoveryScenario(scope.row)\">복원</LinkButton>\r\n                    </template>\r\n                </GridColumn>\r\n            </DataGrid>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapMutations } from 'vuex'\r\nimport Buttons from './Buttons'\r\n\r\nexport default {\r\n    components: {\r\n        Buttons\r\n    },\r\n    data() {\r\n        return {\r\n            buttonEvents: {\r\n                refresh: {\r\n                    show: true,\r\n                    event: this.loadGrid\r\n                },\r\n                add: {\r\n                    show: true,\r\n                    event: this.addScenario\r\n                },\r\n                delete: {\r\n                    show: true,\r\n                    event: this.deleteScenario\r\n                },\r\n                execute: {\r\n                    show: true,\r\n                    event: this.executeScenario\r\n                },\r\n                pause: {\r\n                    show: true,\r\n                    event: this.pauseScenario\r\n                }\r\n            },\r\n            scenarioForm: {\r\n                scenarioName: '',\r\n                userCount: 1,\r\n                loopCount: 1\r\n            },\r\n            unRegisterAction: [],\r\n            registerAction: [],\r\n            rules: {\r\n                scenarioName: [\r\n                    { required: true, message: '시나리오명을 입력해주세요', trigger: 'blur' }\r\n                ],\r\n                userCount: [\r\n                    { required: true, message: '유저수를 입력해주세요', trigger: 'blur' }\r\n                ],\r\n                loopCount: [\r\n                    { required: true, message: '반복횟수를 입력해주세요', trigger: 'blur' }\r\n                ]\r\n            },\r\n            data: [],\r\n            deletedScenarioData: [],\r\n            allChecked: false,\r\n            rowClicked: false,\r\n            isUpdate: true,\r\n            loading: false,\r\n            focusIndex: 0,\r\n            dialogDeletedScenario: false,\r\n            deletedLoading: false\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n        this.loadGrid()\r\n    },\r\n\r\n    computed: {\r\n        checkedRows() {\r\n            return this.data.filter(row => row.selected)\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        ...mapMutations([\r\n            'setIsExecute'\r\n        ]),\r\n\r\n        // 시나리오 목록 load / reload\r\n        loadGrid(isAddAndDelete) {\r\n            this.loading = true\r\n            this.axios.get('/api/v1/scenario').then(response => {\r\n                this.loading = false\r\n\r\n                response.data.scenarioList.forEach((row, index) => {\r\n                    row['index'] = index\r\n                })\r\n\r\n                this.data = response.data.scenarioList\r\n                this.unRegisterAction = response.data.actionList\r\n                \r\n                if(this.data.length == 0) {\r\n                    this.isUpdate = false\r\n                    this.allChecked = false\r\n                    this.resetScenarioForm()\r\n                } else {\r\n                    var index\r\n\r\n                    if(isAddAndDelete)\r\n                        index = this.data.length - 1\r\n                    else\r\n                        index = this.focusIndex\r\n\r\n                    this.$refs.scenarioList.selectRow(this.data[index])\r\n                }\r\n            }).catch(ex => {\r\n                this.loading = false\r\n                console.log(ex)\r\n            })\r\n        },\r\n\r\n        // 삭제된 시나리오목록 load / reload\r\n        loadDeletedGrid() {\r\n            this.axios.get('/api/v1/scenario/deleted').then(response => {\r\n                this.deletedScenarioData = response.data.deletedScenarioList\r\n                this.dialogDeletedScenario = true\r\n            }).catch(ex => {\r\n                console.log(ex)\r\n            })\r\n        },\r\n\r\n        // 전체 체크시 발생 이벤트\r\n        onAllCheckedChange(checked) {\r\n            if(this.rowClicked) {\r\n                return\r\n            }\r\n            this.data = this.data.map(row => {\r\n                return Object.assign({}, row, {\r\n                    selected: checked\r\n                })\r\n            })\r\n        },\r\n\r\n        // 한 개의 항목 체크시 발생 이벤트\r\n        onCheckedChange(checked) {\r\n            this.allChecked = this.checkedRows.length === this.data.length\r\n            this.rowClicked = true\r\n            this.$nextTick(() => (this.rowClicked = false))\r\n        },\r\n\r\n        // 시나리오 폼 초기화\r\n        resetScenarioForm() {\r\n            this.$refs['scenarioForm'].resetFields()\r\n            this.registerAction = []\r\n        },\r\n\r\n        // 시나리오목록에서 시나리오 클릭시 이벤트\r\n        scenarioClick(row) {\r\n            this.isUpdate = true\r\n\r\n            if(row) {\r\n                this.focusIndex = row.index\r\n                var copy = Object.assign({}, row)\r\n\r\n                this.scenarioForm = copy\r\n\r\n                var actionIds = []\r\n\r\n                for(var i = 0; i < row.actionList.length; i++)\r\n                    actionIds.push(row.actionList[i].actionId)\r\n                \r\n                this.registerAction = actionIds\r\n            }\r\n        },\r\n\r\n        // 시나리오 폼에서 저장버튼 클릭시 이벤트\r\n        saveScenario(form) {\r\n            this.$refs[form].validate(valid => {\r\n                if(valid) {\r\n                    if(this.registerAction.length == 0) {\r\n                        this.notification('saveScenarioCheck')\r\n                        return false\r\n                    }\r\n\r\n                    var params = {\r\n                        scenario: {\r\n                            scenarioName: this.scenarioForm.scenarioName,\r\n                            loopCount: this.scenarioForm.loopCount,\r\n                            userCount: this.scenarioForm.userCount\r\n                        },\r\n                        actionIds: this.registerAction\r\n                    }\r\n\r\n                    if(this.isUpdate) {\r\n                        params.scenario['scenarioId'] = this.scenarioForm.scenarioId\r\n                        this.axios.put('/api/v1/scenario', params).then(response => {\r\n                            this.loadGrid()\r\n                            this.notification('saveScenario')\r\n                        })\r\n                    } else {\r\n                        this.axios.post('/api/v1/scenario', params).then(response => {\r\n                            this.loadGrid(true)\r\n                            this.notification('saveScenario')\r\n                        })\r\n                    }\r\n                } else {\r\n                    return false\r\n                }\r\n            })\r\n        },\r\n\r\n        // 시나리오 추가 버튼 클릭시\r\n        addScenario() {\r\n            this.resetScenarioForm()\r\n            this.$refs.scenarioList.clearSelections()\r\n            this.$nextTick(() => this.isUpdate = false)\r\n        },\r\n\r\n        // 시나리오 삭제 버튼 클릭시\r\n        deleteScenario() {\r\n            if(this.checkedRows.length == 0) {\r\n                this.notification('deleteScenarioCheck')\r\n            } else {\r\n                this.$confirm('체크한 시나리오들을 삭제하시겠습니까?', {\r\n                    confirmButtonText: '삭제',\r\n                    cancelButtonText: '취소',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    var scenarioIds = []\r\n                    this.checkedRows.forEach(row => scenarioIds.push(row.scenarioId))\r\n\r\n                    this.axios.delete('/api/v1/scenario', {\r\n                        data: {\r\n                            scenarioIds: scenarioIds\r\n                        }\r\n                    }).then(response => {\r\n                        if(response.data) {\r\n                            this.loadGrid(true)\r\n                            this.notification('deleteScenario')\r\n                        }\r\n                    }).catch(ex => {\r\n                        this.notification('deleteScenarioError')\r\n                    })\r\n                })\r\n            }\r\n        },\r\n\r\n        // 시나리오 실행 버튼 클릭시\r\n        executeScenario() {\r\n            if(this.checkedRows.length == 0) {\r\n                this.notification('executeScenarioCheck')\r\n            } else {\r\n                this.setIsExecute({\r\n                    isExecute: true,\r\n                    message: '시나리오가 실행중입니다'\r\n                })\r\n                this.axios.post('/api/v1/scenario/execute', {\r\n                    scenarioList: this.checkedRows\r\n                }).then(response => {\r\n                })\r\n            }\r\n        },\r\n\r\n        // 시나리오 중지 버튼 클릭시\r\n        pauseScenario() {\r\n            this.axios.post('/api/v1/scenario/pause').then(response => {\r\n                this.setIsExecute({ isExecute: false })\r\n            }).catch(ex => {\r\n                this.setIsExecute({ isExecute: false })\r\n                console.log(ex)\r\n            })\r\n        },\r\n\r\n        // 삭제된 시나리오 버튼 클릭시\r\n        showDeletedScenario() {\r\n            this.loadDeletedGrid()\r\n        },\r\n\r\n        // 시나리오 복원 버튼 클릭시\r\n        recoveryScenario(row) {\r\n            this.$confirm('시나리오를 복원하시겠습니까?', '시나리오복원', {\r\n                confirmButtonText: '복원',\r\n                cancelButtonText: '취소',\r\n                type: 'info'\r\n            }).then(() => {\r\n                this.axios.post('/api/v1/scenario/recovery', {\r\n                    scenarioIds: [row.scenarioId]\r\n                }).then(response => {\r\n                    this.loadGrid()\r\n                    this.loadDeletedGrid()\r\n                }).catch(() => {\r\n\r\n                })\r\n            })\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.el-form {\r\n    margin-top: 20px;\r\n    margin-left: 20px;\r\n}\r\n\r\n.el-input, .el-textarea {\r\n    width: 600px;\r\n}\r\n\r\n.el-divider {\r\n    margin: 9px 0;\r\n}\r\n\r\n.checkbox {\r\n    width: 17px;\r\n    height: 17px;\r\n}\r\n\r\n.l-btn {\r\n    height: 20px;\r\n}\r\n\r\n.el-transfer {\r\n    margin-left: 100px;\r\n    margin-bottom: 15px;\r\n}\r\n</style>\r\n\r\n<style>\r\n.l-btn-text {\r\n    font-size: 12px;\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/Scenario.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('Layout',{staticStyle:{\"width\":\"100%\",\"height\":\"800px\"}},[_c('LayoutPanel',{staticStyle:{\"height\":\"45px\",\"text-align\":\"right\"},attrs:{\"region\":\"north\",\"border\":false}},[_c('Buttons',{attrs:{\"buttonEvents\":_vm.buttonEvents}})],1),_vm._v(\" \"),_c('LayoutPanel',{staticStyle:{\"width\":\"450px\"},attrs:{\"region\":\"west\",\"title\":\"시나리오 목록\"}},[_c('template',{slot:\"header\"},[_c('div',{staticClass:\"f-row\"},[_c('div',{staticClass:\"panel-title f-full\"},[_vm._v(\"시나리오 목록\")]),_vm._v(\" \"),_c('LinkButton',{on:{\"click\":function($event){return _vm.showDeletedScenario()}}},[_vm._v(\"삭제된 시나리오\")])],1)]),_vm._v(\" \"),_c('DataGrid',{ref:\"scenarioList\",staticStyle:{\"width\":\"100%\",\"height\":\"100%\"},attrs:{\"data\":_vm.data,\"columnResizing\":true,\"border\":false,\"loading\":_vm.loading,\"selectionMode\":\"single\"},on:{\"selectionChange\":function($event){return _vm.scenarioClick($event)}}},[_c('GridColumn',{attrs:{\"field\":\"ck\",\"width\":\"30\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"header\",fn:function(scope){return [_c('CheckBox',{on:{\"checkedChange\":function($event){return _vm.onAllCheckedChange($event)}},model:{value:(_vm.allChecked),callback:function ($$v) {_vm.allChecked=$$v},expression:\"allChecked\"}})]}},{key:\"body\",fn:function(scope){return [_c('CheckBox',{on:{\"checkedChange\":function($event){return _vm.onCheckedChange($event)}},model:{value:(scope.row.selected),callback:function ($$v) {_vm.$set(scope.row, \"selected\", $$v)},expression:\"scope.row.selected\"}})]}}])}),_vm._v(\" \"),_c('GridColumn',{attrs:{\"cellCss\":\"datagrid-td-rownumber\",\"width\":\"50\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"body\",fn:function(scope){return [_vm._v(\"\\n                        \"+_vm._s(scope.rowIndex + 1)+\"\\n                    \")]}}])},[_c('template',{slot:\"header\"},[_vm._v(\"\\n                        No.\\n                    \")])],2),_vm._v(\" \"),_c('GridColumn',{attrs:{\"field\":\"scenarioName\",\"title\":\"시나리오명\",\"halign\":\"center\"}}),_vm._v(\" \"),_c('GridColumn',{attrs:{\"field\":\"loopCount\",\"title\":\"반복 횟수\",\"width\":\"60\",\"align\":\"center\"}}),_vm._v(\" \"),_c('GridColumn',{attrs:{\"title\":\"등록된 동작 개수\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"body\",fn:function(scope){return [_vm._v(\"\\n                        \"+_vm._s(scope.row.actionList.length)+\"\\n                    \")]}}])})],1)],2),_vm._v(\" \"),_c('LayoutPanel',{staticStyle:{\"width\":\"100%\",\"height\":\"100%\"},attrs:{\"region\":\"center\",\"title\":\"시나리오 내용\"}},[_c('el-form',{ref:\"scenarioForm\",attrs:{\"model\":_vm.scenarioForm,\"rules\":_vm.rules,\"label-position\":\"left\",\"label-width\":\"100px\",\"size\":\"mini\"}},[_c('el-form-item',{attrs:{\"label\":\"시나리오명\",\"prop\":\"scenarioName\"}},[_c('el-input',{attrs:{\"placeholder\":\"예약모듈 시나리오\"},model:{value:(_vm.scenarioForm.scenarioName),callback:function ($$v) {_vm.$set(_vm.scenarioForm, \"scenarioName\", $$v)},expression:\"scenarioForm.scenarioName\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"반복 횟수\",\"prop\":\"loopCount\"}},[_c('el-input-number',{attrs:{\"min\":1},model:{value:(_vm.scenarioForm.loopCount),callback:function ($$v) {_vm.$set(_vm.scenarioForm, \"loopCount\", $$v)},expression:\"scenarioForm.loopCount\"}})],1),_vm._v(\" \"),_c('el-transfer',{attrs:{\"data\":_vm.unRegisterAction,\"titles\":['미등록 동작', '등록된 동작'],\"filter-placeholder\":\"검색어 입력\",\"filterable\":\"\"},model:{value:(_vm.registerAction),callback:function ($$v) {_vm.registerAction=$$v},expression:\"registerAction\"}}),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"info\"},on:{\"click\":function($event){return _vm.saveScenario('scenarioForm')}}},[_vm._v(\"저장\")])],1)],1)],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"삭제된 시나리오 목록\",\"visible\":_vm.dialogDeletedScenario,\"width\":\"800px\"},on:{\"update:visible\":function($event){_vm.dialogDeletedScenario=$event}}},[(_vm.deletedScenarioData.length == 0)?_c('span',[_vm._v(\"삭제된 시나리오가 없습니다\")]):_vm._e(),_vm._v(\" \"),(_vm.deletedScenarioData.length != 0)?_c('DataGrid',{staticStyle:{\"height\":\"400px\"},attrs:{\"data\":_vm.deletedScenarioData,\"loading\":_vm.deletedLoading}},[_c('GridColumn',{attrs:{\"align\":\"center\",\"cellCss\":\"datagrid-td-rownumber\",\"width\":\"30\"},scopedSlots:_vm._u([{key:\"body\",fn:function(scope){return [_vm._v(\"\\n                    \"+_vm._s(scope.rowIndex + 1)+\"\\n                \")]}}],null,false,3393989708)},[_c('template',{slot:\"header\"},[_vm._v(\"\\n                    No.\\n                \")])],2),_vm._v(\" \"),_c('GridColumn',{attrs:{\"field\":\"scenarioName\",\"title\":\"시나리오명\",\"halign\":\"center\"}}),_vm._v(\" \"),_c('GridColumn',{attrs:{\"field\":\"loopCount\",\"title\":\"반복 횟수\",\"align\":\"center\"}}),_vm._v(\" \"),_c('GridColumn',{attrs:{\"field\":\"registerActionCount\",\"title\":\"등록된 동작 개수\",\"align\":\"center\"}}),_vm._v(\" \"),_c('GridColumn',{attrs:{\"field\":\"delDt\",\"title\":\"삭제일시\",\"align\":\"center\"}}),_vm._v(\" \"),_c('GridColumn',{attrs:{\"title\":\"\",\"width\":\"50\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"body\",fn:function(scope){return [_c('LinkButton',{on:{\"click\":function($event){return _vm.recoveryScenario(scope.row)}}},[_vm._v(\"복원\")])]}}],null,false,3501991017)})],1):_vm._e()],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-8907ffc6\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Scenario.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-8907ffc6\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Scenario.vue\")\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-8907ffc6\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=1!./Scenario.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Scenario.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Scenario.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-8907ffc6\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Scenario.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-8907ffc6\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Scenario.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}
{"version":3,"sources":["webpack:///src/components/Scenario.vue","webpack:///./src/components/Scenario.vue?eccf","webpack:///./src/components/Scenario.vue"],"names":["Scenario","components","Buttons","data","buttonEvents","refresh","show","event","this","loadGrid","add","addScenario","delete","deleteScenario","execute","executeScenario","pause","pauseScenario","scenarioForm","scenarioName","userCount","loopCount","reserveTime","status","reserveForm","unRegisterAction","registerAction","rules","required","message","trigger","deletedScenarioData","allChecked","rowClicked","isUpdate","loading","focusIndex","dialogDeletedScenario","deletedLoading","isAddClicked","isReserved","index","scList","mounted","computed","checkedRows","filter","row","selected","methods","extends_default","Object","vuex_esm","isAddAndDelete","_this","axios","get","then","response","scenarioList","forEach","actionList","length","resetScenarioForm","$refs","selectRow","catch","ex","console","log","loadDeletedGrid","_this2","deletedScenarioList","onAllCheckedChange","checked","map","assign_default","onCheckedChange","_this3","$nextTick","resetFields","scenarioClick","copy","push","actionIds","i","actionId","saveScenario","form","_this4","post","executeFlag","notification","validate","valid","params","scenario","scenarioId","put","reserveScenario","_this5","String","match","reserveId","overlaps","setIsExecute","_this6","clearSelections","_this7","$confirm","confirmButtonText","cancelButtonText","type","scenarioIds","_this8","isExecute","_this9","showDeletedScenario","recoveryScenario","_this10","components_Scenario","render","_vm","_h","$createElement","_c","_self","staticStyle","width","height","text-align","attrs","region","border","_v","title","slot","staticClass","on","click","$event","ref","columnResizing","selectionMode","selectionChange","field","align","scopedSlots","_u","key","fn","scope","checkedChange","model","value","callback","$$v","expression","$set","cellCss","_s","rowIndex","halign","label-position","label-width","size","label","prop","placeholder","min","titles","filter-placeholder","filterable","id","color","disabled","margin-left","visible","update:visible","_e","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"js/2.84632fe52f7e82ca62ea.js","sourcesContent":["<template>\r\n    <div>\r\n        <Layout style=\"width: 100%;\">\r\n            <LayoutPanel region=\"north\" :border=\"false\" style=\"height: 45px; text-align: right;\">\r\n                <Buttons :buttonEvents=\"buttonEvents\"/>\r\n            </LayoutPanel>\r\n            \r\n            <LayoutPanel region=\"west\" title=\"시나리오 목록\" style=\"width: 450px;\">\r\n                <template slot=\"header\">\r\n                    <div class=\"f-row\">\r\n                        <div class=\"panel-title f-full\">시나리오 목록</div>\r\n                        <LinkButton @click=\"showDeletedScenario()\">삭제된 시나리오</LinkButton>\r\n                    </div>\r\n                </template>\r\n\r\n                <DataGrid\r\n                    ref=\"scenarioList\"\r\n                    :data=\"data\"\r\n                    :columnResizing=\"true\"\r\n                    :border=\"false\"\r\n                    :loading=\"loading\"\r\n                    selectionMode=\"single\"\r\n                    @selectionChange=\"scenarioClick($event)\"\r\n                    style=\"width: 100%; height: 100%;\">\r\n\r\n                    <GridColumn field=\"ck\" width=\"30\" align=\"center\">\r\n                        <template slot=\"header\" slot-scope=\"scope\">\r\n                            <CheckBox v-model=\"allChecked\" @checkedChange=\"onAllCheckedChange($event)\"></CheckBox>\r\n                        </template>\r\n                        <template slot=\"body\" slot-scope=\"scope\">\r\n                            <CheckBox v-model=\"scope.row.selected\" @checkedChange=\"onCheckedChange($event)\"></CheckBox>\r\n                        </template>\r\n                    </GridColumn>\r\n                    \r\n                    <GridColumn cellCss=\"datagrid-td-rownumber\" width=\"50\" align=\"center\">\r\n                        <template slot=\"header\">\r\n                            No.\r\n                        </template>\r\n                        <template slot=\"body\" slot-scope=\"scope\">\r\n                            {{ scope.rowIndex + 1 }}\r\n                        </template>\r\n                    </GridColumn>\r\n                    <GridColumn field=\"scenarioName\" title=\"시나리오명\" halign=\"center\"></GridColumn>\r\n                    <GridColumn field=\"loopCount\" title=\"반복 횟수\" width=\"60\" align=\"center\"></GridColumn>\r\n                    <GridColumn title=\"등록된 동작 개수\" align=\"center\">\r\n                        <template slot=\"body\" slot-scope=\"scope\">\r\n                            {{ scope.row.actionList.length }}\r\n                        </template>\r\n                    </GridColumn>\r\n                </DataGrid>\r\n            </LayoutPanel>\r\n\r\n            <LayoutPanel region=\"center\" title=\"시나리오 내용\" style=\"width: 100%; height: 100%;\">\r\n                <el-form ref=\"scenarioForm\" :model=\"scenarioForm\" :rules=\"rules\" label-position=\"left\" label-width=\"100px\" size=\"mini\">\r\n                    <el-form-item label=\"시나리오명\" prop=\"scenarioName\">\r\n                        <el-input v-model=\"scenarioForm.scenarioName\" placeholder=\"예약모듈 시나리오\"></el-input>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"반복 횟수\" prop=\"loopCount\">\r\n                        <el-input-number v-model=\"scenarioForm.loopCount\" :min=\"1\"></el-input-number>\r\n                    </el-form-item>\r\n                    \r\n                    <el-transfer\r\n                        :data=\"unRegisterAction\"\r\n                        v-model=\"registerAction\"\r\n                        :titles=\"['미등록 동작', '등록된 동작']\"\r\n                        filter-placeholder=\"검색어 입력\"\r\n                        filterable>\r\n                    </el-transfer>\r\n\r\n                    <el-form-item>\r\n                        <el-button type=\"info\" @click=\"saveScenario('scenarioForm')\">저장</el-button>\r\n                    </el-form-item>\r\n\r\n                    \r\n                    <!--park-->\r\n                    <div id=\"reserveComment\">\r\n                        <br><br><br>\r\n                        <div style=\"color:red\" >\r\n                            <label >예약은 저장 후 가능합니다.</label>\r\n                        </div>\r\n                        <br>\r\n                    </div>\r\n\r\n                    <el-form-item label=\"예약날짜\" prop=\"reserveTime\" >\r\n                        <el-input v-model=\"scenarioForm.reserveTime\" placeholder=\"2020/10/20_14:30\" :disabled=\"this.isAddClicked\" style=\"width:15%\"></el-input>\r\n                        <label style=\"margin-left:10px; color:#BDBDBD\"> ex) 2020/09/27_02:14 (년/월/일_시:분)</label>\r\n                    </el-form-item>\r\n                   \r\n                   \r\n                    \r\n                    <el-form-item>\r\n                        <el-button type=\"info\" @click=\"reserveScenario('scenarioForm')\" :disabled=\"this.isAddClicked\">예약</el-button>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item prop=\"status\">\r\n                        <el-input v-model=\"scenarioForm.status\" type=\"hidden\"></el-input>\r\n                    </el-form-item>\r\n\r\n\r\n\r\n                </el-form>\r\n            </LayoutPanel>\r\n        </Layout>\r\n\r\n        <el-dialog title=\"삭제된 시나리오 목록\" :visible.sync=\"dialogDeletedScenario\" width=\"800px\">\r\n            <span v-if=\"deletedScenarioData.length == 0\">삭제된 시나리오가 없습니다</span>\r\n            <DataGrid\r\n                v-if=\"deletedScenarioData.length != 0\"\r\n                :data=\"deletedScenarioData\"\r\n                :loading=\"deletedLoading\"\r\n                style=\"height: 400px;\">\r\n                <GridColumn align=\"center\" cellCss=\"datagrid-td-rownumber\" width=\"30\">\r\n                    <template slot=\"header\">\r\n                        No.\r\n                    </template>\r\n                    <template slot=\"body\" slot-scope=\"scope\">\r\n                        {{ scope.rowIndex + 1 }}\r\n                    </template>\r\n                </GridColumn>\r\n                <GridColumn field=\"scenarioName\" title=\"시나리오명\" halign=\"center\"></GridColumn>\r\n                <GridColumn field=\"loopCount\" title=\"반복 횟수\" align=\"center\"></GridColumn>\r\n                <GridColumn field=\"registerActionCount\" title=\"등록된 동작 개수\" align=\"center\"></GridColumn>\r\n                <GridColumn field=\"delDt\" title=\"삭제일시\" align=\"center\"></GridColumn>\r\n                <GridColumn title=\"\" width=\"50\" align=\"center\">\r\n                    <template slot=\"body\" slot-scope=\"scope\">\r\n                        <LinkButton @click=\"recoveryScenario(scope.row)\">복원</LinkButton>\r\n                    </template>\r\n                </GridColumn>\r\n            </DataGrid>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapMutations } from 'vuex'\r\nimport Buttons from './Buttons'\r\n\r\nexport default {\r\n    components: {\r\n        Buttons\r\n    },\r\n    data() {\r\n        return {\r\n            buttonEvents: {\r\n                refresh: {\r\n                    show: true,\r\n                    event: this.loadGrid\r\n                },\r\n                add: {\r\n                    show: true,\r\n                    event: this.addScenario\r\n                },\r\n                delete: {\r\n                    show: true,\r\n                    event: this.deleteScenario\r\n                },\r\n                execute: {\r\n                    show: true,\r\n                    event: this.executeScenario\r\n                },\r\n                pause: {\r\n                    show: true,\r\n                    event: this.pauseScenario\r\n                }\r\n            },\r\n            scenarioForm: {\r\n                scenarioName: '',\r\n                userCount: 1,\r\n                loopCount: 1,\r\n                reserveTime: '',\r\n                status:''\r\n            },\r\n            reserveForm: {\r\n                scenarioName: '',\r\n                userCount: 1,\r\n                loopCount: 1,\r\n                reserveTime: '',\r\n                status:''\r\n            },\r\n            unRegisterAction: [],\r\n            registerAction: [],\r\n            rules: {\r\n                scenarioName: [\r\n                    { required: true, message: '시나리오명을 입력해주세요', trigger: 'blur' }\r\n                ],\r\n                userCount: [\r\n                    { required: true, message: '유저수를 입력해주세요', trigger: 'blur' }\r\n                ],\r\n                loopCount: [\r\n                    { required: true, message: '반복횟수를 입력해주세요', trigger: 'blur' }\r\n                ],\r\n                reserveTime: [\r\n                    /*{ required: true, message: '예약날짜를 입력해주세요', trigger: 'blur' }*/,\r\n                    // {\r\n                    //     validator: (rule, value, callback) => {\r\n                    //         var regex = /^(19|20)\\d{2}\\/(0[1-9]|1[012])\\/(0[1-9]|[12][0-9]|3[0-1])_([1-9]|[01][0-9]|2[0-3]):([0-5][0-9])$/\r\n                    //         String(value).match(regex) ? callback() : callback(new Error('예약 날짜 형식에 맞게 작성해주세요.'))\r\n                            \r\n                    //     }\r\n                    // }\r\n                ],\r\n            },\r\n            data: [],\r\n            deletedScenarioData: [],\r\n            allChecked: false,\r\n            rowClicked: false,\r\n            isUpdate: true,\r\n            loading: false,\r\n            focusIndex: 0,\r\n            dialogDeletedScenario: false,\r\n            deletedLoading: false,\r\n            //park\r\n            isAddClicked: false,\r\n            isReserved : false,\r\n            index : 0,\r\n            scList : []\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n        this.loadGrid()\r\n    },\r\n\r\n    computed: {\r\n        checkedRows() {\r\n            return this.data.filter(row => row.selected)\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        ...mapMutations([\r\n            'setIsExecute',\r\n            'setIsReserve'\r\n        ]),\r\n\r\n        // 시나리오 목록 load / reload\r\n        loadGrid(isAddAndDelete) {\r\n            this.loading = true\r\n\r\n            this.axios.get('/api/v1/scenario').then(response => {\r\n\r\n                \r\n\r\n                this.loading = false\r\n\r\n                response.data.scenarioList.forEach((row, index) => {\r\n                    row['index'] = index\r\n                })\r\n                \r\n                this.data = response.data.scenarioList\r\n                this.unRegisterAction = response.data.actionList\r\n                \r\n                if(this.data.length == 0) {\r\n                    this.isUpdate = false\r\n                    this.allChecked = false\r\n                    this.resetScenarioForm()\r\n                } else {\r\n                    var index\r\n\r\n                    if(isAddAndDelete)\r\n                        index = this.data.length - 1\r\n                    else\r\n                        index = this.focusIndex\r\n\r\n                    this.$refs.scenarioList.selectRow(this.data[index])\r\n                }\r\n            }).catch(ex => {\r\n                this.loading = false\r\n                console.log(ex)\r\n            })\r\n        },\r\n\r\n\r\n\r\n\r\n        // 삭제된 시나리오목록 load / reload\r\n        loadDeletedGrid() {\r\n            this.axios.get('/api/v1/scenario/deleted').then(response => {\r\n                this.deletedScenarioData = response.data.deletedScenarioList\r\n                this.dialogDeletedScenario = true\r\n            }).catch(ex => {\r\n                console.log(ex)\r\n            })\r\n        },\r\n\r\n        // 전체 체크시 발생 이벤트\r\n        onAllCheckedChange(checked) {\r\n            if(this.rowClicked) {\r\n                return\r\n            }\r\n            this.data = this.data.map(row => {\r\n                return Object.assign({}, row, {\r\n                    selected: checked\r\n                })\r\n            })\r\n        },\r\n\r\n        // 한 개의 항목 체크시 발생 이벤트\r\n        onCheckedChange(checked) {\r\n            this.allChecked = this.checkedRows.length === this.data.length\r\n            this.rowClicked = true\r\n            this.$nextTick(() => (this.rowClicked = false))\r\n\r\n            //console.log('야야야',this.checkedRows)\r\n        },\r\n\r\n        // 시나리오 폼 초기화\r\n        resetScenarioForm() {\r\n            this.$refs['scenarioForm'].resetFields()\r\n            this.registerAction = []\r\n        },\r\n\r\n        // 시나리오목록에서 시나리오 클릭시 이벤트\r\n        scenarioClick(row) {\r\n            this.scList = []//park\r\n            this.isUpdate = true\r\n\r\n            if(row) {\r\n                this.isAddClicked=false//park\r\n                this.focusIndex = row.index\r\n                var copy = Object.assign({}, row)\r\n\r\n                this.scenarioForm = copy\r\n                \r\n                //park\r\n                this.scList.push(copy)\r\n                \r\n                //\r\n                var actionIds = []\r\n\r\n                for(var i = 0; i < row.actionList.length; i++)\r\n                    actionIds.push(row.actionList[i].actionId)\r\n                \r\n                this.registerAction = actionIds\r\n            }\r\n        },\r\n\r\n        // 시나리오 폼에서 저장버튼 클릭시 이벤트\r\n        saveScenario(form) {\r\n\r\n            var isRun = false;\r\n            this.axios.post('/api/v1/scenario/check',/*추가!*/).then(response => {\r\n                //console.log(\"캬캬   \",response.data.executeFlag)\r\n                isRun = response.data.executeFlag\r\n                //if (response.data.executeFlag != null){\r\n                if (isRun == true){\r\n                    // 메시지 띄우는 로직\r\n                    //alert(\"뭔가 실행중이야!!!!\");\r\n                    this.notification('actionIsRun')\r\n                }else{\r\n                    this.$refs[form].validate(valid => {\r\n                        if(valid) {\r\n                            if(this.registerAction.length == 0) {\r\n                                this.notification('saveScenarioCheck')\r\n                                return false\r\n                            }\r\n\r\n                            var params = {\r\n                                scenario: {\r\n                                    scenarioName: this.scenarioForm.scenarioName,\r\n                                    loopCount: this.scenarioForm.loopCount,\r\n                                    userCount: this.scenarioForm.userCount\r\n                                },\r\n                                actionIds: this.registerAction\r\n                            }\r\n\r\n                            if(this.isUpdate) {\r\n                                params.scenario['scenarioId'] = this.scenarioForm.scenarioId\r\n                                this.axios.put('/api/v1/scenario', params).then(response => {\r\n                                    this.loadGrid()\r\n                                    this.notification('saveScenario')\r\n                                })\r\n                            } else {\r\n                                this.axios.post('/api/v1/scenario', params).then(response => {\r\n                                    this.loadGrid(true)\r\n                                    this.notification('saveScenario')\r\n                                })\r\n                            }\r\n                        } else {\r\n                            return false\r\n                        }\r\n                    })\r\n                }\r\n                    \r\n            })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            // this.$refs[form].validate(valid => {\r\n            //     if(valid) {\r\n            //         if(this.registerAction.length == 0) {\r\n            //             this.notification('saveScenarioCheck')\r\n            //             return false\r\n            //         }\r\n\r\n            //         var params = {\r\n            //             scenario: {\r\n            //                 scenarioName: this.scenarioForm.scenarioName,\r\n            //                 loopCount: this.scenarioForm.loopCount,\r\n            //                 userCount: this.scenarioForm.userCount\r\n            //             },\r\n            //             actionIds: this.registerAction\r\n            //         }\r\n\r\n            //         if(this.isUpdate) {\r\n            //             params.scenario['scenarioId'] = this.scenarioForm.scenarioId\r\n            //             this.axios.put('/api/v1/scenario', params).then(response => {\r\n            //                 this.loadGrid()\r\n            //                 this.notification('saveScenario')\r\n            //             })\r\n            //         } else {\r\n            //             this.axios.post('/api/v1/scenario', params).then(response => {\r\n            //                 this.loadGrid(true)\r\n            //                 this.notification('saveScenario')\r\n            //             })\r\n            //         }\r\n            //     } else {\r\n            //         return false\r\n            //     }\r\n            // })\r\n        },\r\n\r\n        //실행 유무 확인\r\n        // isExecuted(){\r\n        //     // var params={\r\n        //     //     eF:\"\"\r\n        //     // },\r\n\r\n        //     this.axios.get('/api/v1/scenario/reserve/exflag').then(exflag => {\r\n        //         //console.log('실행?????', Boolean(exflag))\r\n        //         //eF=exflag\r\n        //         console.log('실행?????', exflag.data)\r\n        //     })\r\n            \r\n        // },\r\n    \r\n        // 시나리오 폼에서 예약버튼 클릭 시 이벤트 - park\r\n        reserveScenario(form) {\r\n           \r\n            var isRun = false;\r\n            this.axios.post('/api/v1/scenario/check',/*추가!*/).then(response => {\r\n                //console.log(\"캬캬   \",response.data.executeFlag)\r\n                isRun = response.data.executeFlag\r\n                //if (response.data.executeFlag != null){\r\n                if (isRun == true){\r\n                    // 메시지 띄우는 로직\r\n                    //alert(\"뭔가 실행중이야!!!!\");\r\n                    this.notification('actionIsRun')\r\n                }else{\r\n                    this.isReserved = true\r\n                    this.$refs[form].validate(valid => {\r\n                        if(valid) {\r\n                            // if(this.registerAction.length == 0) {\r\n                            //     this.notification('saveReserveScenarioCheck')\r\n                            //     return false\r\n                            // }\r\n                            \r\n                            var params = {\r\n                                scenario: {\r\n                                    scenarioName: this.scenarioForm.scenarioName,\r\n                                    loopCount: this.scenarioForm.loopCount,\r\n                                    userCount: this.scenarioForm.userCount,\r\n                                    reserveTime : this.scenarioForm.reserveTime,\r\n                                    status : this.scenarioForm.status,\r\n                                    //scenarioList: this.checkedRows\r\n                                    scenarioList: this.scList\r\n                                },\r\n                                actionIds: this.registerAction\r\n                            }\r\n                            //console.log(\"실제 보내지는 데이터 꼴 \",this.checkedRows)\r\n                            //asdsad\r\n                            var regex = /^(19|20)\\d{2}\\/(0[1-9]|1[012])\\/(0[1-9]|[12][0-9]|3[0-1])_([1-9]|[01][0-9]|2[0-3]):([0-5][0-9])$/\r\n                                \r\n                            if(this.scenarioForm.reserveTime == null || !String(this.scenarioForm.reserveTime).match(regex)) {\r\n                                this.notification('reserveTimeCheck')//예약시간 미입력 및 잘못 입력 시\r\n                                //lert(\"예약시간 입력해!\")\r\n                                \r\n                                return\r\n                            }else{\r\n                                if(this.isUpdate) {\r\n                                params.scenario['reserveId'] = this.scenarioForm.reserveId\r\n                                //console.log('예약 아이디'+this.scenarioForm.reserveId)\r\n                                //console.log('시나리오 아이디'+this.scenarioForm.scenarioId)\r\n                                    this.axios.post('/api/v1/scenario/reserve', params).then(response => {\r\n                                        //console.log(\"최종1\",response.data)\r\n                                        //\r\n                                        //console.log(\"executeFlag   \",response.data.executeFlag)\r\n                                        //scenarioExecute = response.data.executeFlag\r\n                                        //\r\n                                        if (response.data.overlaps != null){\r\n                                            // 메시지 띄우는 로직\r\n                                            //alert(\"중복임...\");\r\n                                            this.notification('overlapReserveScenario')\r\n                                            return;\r\n                                        }\r\n                                        if (response.data.executeFlag != null){\r\n                                            // 메시지 띄우는 로직\r\n                                            this.notification('isExecuteReserveScenario')\r\n                                            \r\n                                            return;\r\n                                        }\r\n                                        this.loadGrid()\r\n                                        this.notification('saveScenario')\r\n                                        //park 추가\r\n                                        this.setIsExecute({\r\n                                            //isExecute: true,\r\n                                            //message: '동작이 실행중입니다'\r\n                                        })\r\n                                        \r\n                                        // this.setIsReserve({\r\n                                        //     isReserve: true,\r\n                                        //     message: '예약 대기중입니다.'\r\n                                        // })\r\n                                    })\r\n                                \r\n                                //localStorage.setItem('reserveList', JSON.stringify(params));\r\n                            \r\n                                } else {\r\n                                    this.axios.post('/api/v1/scenario/reserve', params).then(response => {\r\n                                        //console.log(\"최종2\",response.data)\r\n                                        if (response.data.overlaps != null){\r\n                                            // 메시지 띄우는 로직\r\n                                            //alert(\"중복임...\");\r\n                                            this.notification('overlapReserveScenario')\r\n                                            return;\r\n                                        }\r\n                                        if (response.data.executeFlag != null){\r\n                                            // 메시지 띄우는 로직\r\n                                            this.notification('isExecuteReserveScenario')\r\n                                            \r\n                                            return;\r\n                                        }\r\n                                        this.loadGrid(true)\r\n                                        this.notification('saveScenario')\r\n                                        //park 추가\r\n                                        this.setIsExecute({\r\n                                            //isExecute: true,\r\n                                            //message: '동작이 실행중입니다'\r\n                                        })\r\n                                    \r\n                                        // this.setIsReserve({\r\n                                        //     isReserve: true,\r\n                                        //     message: '예약 대기중입니다.'\r\n                                        // })\r\n                                    })\r\n                                }\r\n                            }\r\n                            \r\n                        } else {\r\n                            return false\r\n                        }\r\n                    })\r\n                }\r\n                    \r\n            })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            // this.isReserved = true\r\n            // this.$refs[form].validate(valid => {\r\n            //     if(valid) {\r\n            //         // if(this.registerAction.length == 0) {\r\n            //         //     this.notification('saveReserveScenarioCheck')\r\n            //         //     return false\r\n            //         // }\r\n                    \r\n            //         var params = {\r\n            //             scenario: {\r\n            //                 scenarioName: this.scenarioForm.scenarioName,\r\n            //                 loopCount: this.scenarioForm.loopCount,\r\n            //                 userCount: this.scenarioForm.userCount,\r\n            //                 reserveTime : this.scenarioForm.reserveTime,\r\n            //                 status : this.scenarioForm.status,\r\n            //                 //scenarioList: this.checkedRows\r\n            //                 scenarioList: this.scList\r\n            //             },\r\n            //             actionIds: this.registerAction\r\n            //         }\r\n            //         //console.log(\"실제 보내지는 데이터 꼴 \",this.checkedRows)\r\n            //         //asdsad\r\n            //         var regex = /^(19|20)\\d{2}\\/(0[1-9]|1[012])\\/(0[1-9]|[12][0-9]|3[0-1])_([1-9]|[01][0-9]|2[0-3]):([0-5][0-9])$/\r\n                        \r\n            //         if(this.scenarioForm.reserveTime == null || !String(this.scenarioForm.reserveTime).match(regex)) {\r\n            //             this.notification('reserveTimeCheck')//예약시간 미입력 및 잘못 입력 시\r\n            //             //lert(\"예약시간 입력해!\")\r\n                        \r\n            //             return\r\n            //         }else{\r\n            //             if(this.isUpdate) {\r\n            //             params.scenario['reserveId'] = this.scenarioForm.reserveId\r\n            //             //console.log('예약 아이디'+this.scenarioForm.reserveId)\r\n            //             //console.log('시나리오 아이디'+this.scenarioForm.scenarioId)\r\n            //                 this.axios.post('/api/v1/scenario/reserve', params).then(response => {\r\n            //                     //console.log(\"최종1\",response.data)\r\n            //                     //\r\n            //                     //console.log(\"executeFlag   \",response.data.executeFlag)\r\n            //                     //scenarioExecute = response.data.executeFlag\r\n            //                     //\r\n            //                     if (response.data.overlaps != null){\r\n            //                         // 메시지 띄우는 로직\r\n            //                         //alert(\"중복임...\");\r\n            //                         this.notification('overlapReserveScenario')\r\n            //                         return;\r\n            //                     }\r\n            //                     if (response.data.executeFlag != null){\r\n            //                         // 메시지 띄우는 로직\r\n            //                         this.notification('isExecuteReserveScenario')\r\n                                    \r\n            //                         return;\r\n            //                     }\r\n            //                     this.loadGrid()\r\n            //                     this.notification('saveScenario')\r\n            //                     //park 추가\r\n            //                     this.setIsExecute({\r\n            //                         //isExecute: true,\r\n            //                         //message: '동작이 실행중입니다'\r\n            //                     })\r\n                                \r\n            //                     // this.setIsReserve({\r\n            //                     //     isReserve: true,\r\n            //                     //     message: '예약 대기중입니다.'\r\n            //                     // })\r\n            //                 })\r\n                        \r\n            //             //localStorage.setItem('reserveList', JSON.stringify(params));\r\n                       \r\n            //             } else {\r\n            //                 this.axios.post('/api/v1/scenario/reserve', params).then(response => {\r\n            //                     //console.log(\"최종2\",response.data)\r\n            //                     if (response.data.overlaps != null){\r\n            //                         // 메시지 띄우는 로직\r\n            //                         //alert(\"중복임...\");\r\n            //                         this.notification('overlapReserveScenario')\r\n            //                         return;\r\n            //                     }\r\n            //                     if (response.data.executeFlag != null){\r\n            //                         // 메시지 띄우는 로직\r\n            //                         this.notification('isExecuteReserveScenario')\r\n                                    \r\n            //                         return;\r\n            //                     }\r\n            //                     this.loadGrid(true)\r\n            //                     this.notification('saveScenario')\r\n            //                     //park 추가\r\n            //                     this.setIsExecute({\r\n            //                         //isExecute: true,\r\n            //                         //message: '동작이 실행중입니다'\r\n            //                     })\r\n                               \r\n            //                     // this.setIsReserve({\r\n            //                     //     isReserve: true,\r\n            //                     //     message: '예약 대기중입니다.'\r\n            //                     // })\r\n            //                 })\r\n            //             }\r\n            //         }\r\n                    \r\n            //     } else {\r\n            //         return false\r\n            //     }\r\n            // })\r\n        },\r\n\r\n        // 시나리오 추가 버튼 클릭시\r\n        addScenario() {\r\n           \r\n            //park\r\n            this.isAddClicked = true\r\n\r\n            this.resetScenarioForm()\r\n            this.$refs.scenarioList.clearSelections()\r\n            this.$nextTick(() => this.isUpdate = false)\r\n        },\r\n\r\n        // 시나리오 삭제 버튼 클릭시\r\n        deleteScenario() {\r\n\r\n            var isRun = false;\r\n            this.axios.post('/api/v1/scenario/check',/*추가!*/).then(response => {\r\n                //console.log(\"캬캬   \",response.data.executeFlag)\r\n                isRun = response.data.executeFlag\r\n                //if (response.data.executeFlag != null){\r\n                if (isRun == true){\r\n                    // 메시지 띄우는 로직\r\n                    //alert(\"뭔가 실행중이야!!!!\");\r\n                    this.notification('actionIsRun')\r\n                }else{\r\n                    if(this.checkedRows.length == 0) {\r\n                        this.notification('deleteScenarioCheck')\r\n                    } else {\r\n                        this.$confirm('체크한 시나리오들을 삭제하시겠습니까?', {\r\n                            confirmButtonText: '삭제',\r\n                            cancelButtonText: '취소',\r\n                            type: 'warning'\r\n                        }).then(() => {\r\n                            var scenarioIds = []\r\n                            this.checkedRows.forEach(row => scenarioIds.push(row.scenarioId))\r\n\r\n                            this.axios.delete('/api/v1/scenario', {\r\n                                data: {\r\n                                    scenarioIds: scenarioIds\r\n                                }\r\n                            }).then(response => {\r\n                                if(response.data) {\r\n                                    this.loadGrid(true)\r\n                                    this.notification('deleteScenario')\r\n                                }\r\n                            }).catch(ex => {\r\n                                this.notification('deleteScenarioError')\r\n                            })\r\n                        })\r\n                    }\r\n                }\r\n                    \r\n            })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            // if(this.checkedRows.length == 0) {\r\n            //     this.notification('deleteScenarioCheck')\r\n            // } else {\r\n            //     this.$confirm('체크한 시나리오들을 삭제하시겠습니까?', {\r\n            //         confirmButtonText: '삭제',\r\n            //         cancelButtonText: '취소',\r\n            //         type: 'warning'\r\n            //     }).then(() => {\r\n            //         var scenarioIds = []\r\n            //         this.checkedRows.forEach(row => scenarioIds.push(row.scenarioId))\r\n\r\n            //         this.axios.delete('/api/v1/scenario', {\r\n            //             data: {\r\n            //                 scenarioIds: scenarioIds\r\n            //             }\r\n            //         }).then(response => {\r\n            //             if(response.data) {\r\n            //                 this.loadGrid(true)\r\n            //                 this.notification('deleteScenario')\r\n            //             }\r\n            //         }).catch(ex => {\r\n            //             this.notification('deleteScenarioError')\r\n            //         })\r\n            //     })\r\n            // }\r\n        },\r\n\r\n        // 시나리오 실행 버튼 클릭시\r\n        executeScenario() {\r\n            var scenarioExecute = false;\r\n            \r\n            this.axios.post('/api/v1/scenario/checkScenario',/*추가!*/{scenarioList: this.checkedRows}).then(response => {\r\n                //console.log(\"executeFlag   \",response.data.executeFlag)\r\n\r\n                scenarioExecute = response.data.executeFlag\r\n                \r\n                // if(scenarioExecute == true || soonExecute == true){\r\n                //     if (scenarioExecute == true){\r\n                //         // 메시지 띄우는 로직\r\n                //         //alert(\"이미 시나리오가 실행중임니당...\");\r\n                //         this.notification('isExecuteReserveScenario')\r\n                        \r\n                //     }\r\n                //     if (soonExecute == true){\r\n                //         // 메시지 띄우는 로직\r\n                //         alert(\"곧 예약이 시작됩니다. 예약이 끝난 후 실행해 주세요\");\r\n                //         //this.notification('isExecuteReserveScenario')\r\n                        \r\n                //     }\r\n                // }\r\n\r\n\r\n                //if (response.data.executeFlag != null){\r\n                if (scenarioExecute == true){\r\n                        // 메시지 띄우는 로직\r\n                        //alert(\"이미 시나리오가 실행중임니당...\");\r\n                        this.notification('isExecuteReserveScenario')\r\n                        \r\n                }\r\n                else{\r\n                    if(this.checkedRows.length == 0) {\r\n                        this.notification('executeScenarioCheck')\r\n                    } else {\r\n                        this.setIsExecute({\r\n                            isExecute: true,\r\n                            message: '시나리오가 실행중입니다'\r\n                        })\r\n                        this.axios.post('/api/v1/scenario/execute', {\r\n                            scenarioList: this.checkedRows\r\n                        }).then(response => {\r\n                        })\r\n                    }\r\n                }\r\n                    //return;\r\n                //}\r\n            })\r\n        },\r\n\r\n        // 시나리오 중지 버튼 클릭시\r\n        pauseScenario() {\r\n            this.axios.post('/api/v1/scenario/pause').then(response => {\r\n                this.setIsExecute({ isExecute: false })\r\n            }).catch(ex => {\r\n                this.setIsExecute({ isExecute: false })\r\n                console.log(ex)\r\n            })\r\n        },\r\n\r\n        // 삭제된 시나리오 버튼 클릭시\r\n        showDeletedScenario() {\r\n            this.loadDeletedGrid()\r\n        },\r\n\r\n        // 시나리오 복원 버튼 클릭시\r\n        recoveryScenario(row) {\r\n            var isRun = false;\r\n            this.axios.post('/api/v1/scenario/check',/*추가!*/).then(response => {\r\n                //console.log(\"캬캬   \",response.data.executeFlag)\r\n                isRun = response.data.executeFlag\r\n                //if (response.data.executeFlag != null){\r\n                if (isRun == true){\r\n                    // 메시지 띄우는 로직\r\n                    //alert(\"뭔가 실행중이야!!!!\");\r\n                    this.notification('actionIsRun')\r\n                }else{\r\n                    this.$confirm('시나리오를 복원하시겠습니까?', '시나리오복원', {\r\n                        confirmButtonText: '복원',\r\n                        cancelButtonText: '취소',\r\n                        type: 'info'\r\n                    }).then(() => {\r\n                        this.axios.post('/api/v1/scenario/recovery', {\r\n                            scenarioIds: [row.scenarioId]\r\n                        }).then(response => {\r\n                            this.loadGrid()\r\n                            this.loadDeletedGrid()\r\n                        }).catch(() => {\r\n\r\n                        })\r\n                    })\r\n                }\r\n                    \r\n            })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            // this.$confirm('시나리오를 복원하시겠습니까?', '시나리오복원', {\r\n            //     confirmButtonText: '복원',\r\n            //     cancelButtonText: '취소',\r\n            //     type: 'info'\r\n            // }).then(() => {\r\n            //     this.axios.post('/api/v1/scenario/recovery', {\r\n            //         scenarioIds: [row.scenarioId]\r\n            //     }).then(response => {\r\n            //         this.loadGrid()\r\n            //         this.loadDeletedGrid()\r\n            //     }).catch(() => {\r\n\r\n            //     })\r\n            // })\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.el-form {\r\n    margin-top: 20px;\r\n    margin-left: 20px;\r\n}\r\n\r\n.el-input, .el-textarea {\r\n    width: 600px;\r\n}\r\n\r\n.el-divider {\r\n    margin: 9px 0;\r\n}\r\n\r\n.checkbox {\r\n    width: 17px;\r\n    height: 17px;\r\n}\r\n\r\n.l-btn {\r\n    height: 20px;\r\n}\r\n\r\n.el-transfer {\r\n    margin-left: 100px;\r\n    margin-bottom: 15px;\r\n}\r\n</style>\r\n\r\n<style>\r\n.l-btn-text {\r\n    font-size: 12px;\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/Scenario.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('Layout',{staticStyle:{\"width\":\"100%\"}},[_c('LayoutPanel',{staticStyle:{\"height\":\"45px\",\"text-align\":\"right\"},attrs:{\"region\":\"north\",\"border\":false}},[_c('Buttons',{attrs:{\"buttonEvents\":_vm.buttonEvents}})],1),_vm._v(\" \"),_c('LayoutPanel',{staticStyle:{\"width\":\"450px\"},attrs:{\"region\":\"west\",\"title\":\"시나리오 목록\"}},[_c('template',{slot:\"header\"},[_c('div',{staticClass:\"f-row\"},[_c('div',{staticClass:\"panel-title f-full\"},[_vm._v(\"시나리오 목록\")]),_vm._v(\" \"),_c('LinkButton',{on:{\"click\":function($event){return _vm.showDeletedScenario()}}},[_vm._v(\"삭제된 시나리오\")])],1)]),_vm._v(\" \"),_c('DataGrid',{ref:\"scenarioList\",staticStyle:{\"width\":\"100%\",\"height\":\"100%\"},attrs:{\"data\":_vm.data,\"columnResizing\":true,\"border\":false,\"loading\":_vm.loading,\"selectionMode\":\"single\"},on:{\"selectionChange\":function($event){return _vm.scenarioClick($event)}}},[_c('GridColumn',{attrs:{\"field\":\"ck\",\"width\":\"30\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"header\",fn:function(scope){return [_c('CheckBox',{on:{\"checkedChange\":function($event){return _vm.onAllCheckedChange($event)}},model:{value:(_vm.allChecked),callback:function ($$v) {_vm.allChecked=$$v},expression:\"allChecked\"}})]}},{key:\"body\",fn:function(scope){return [_c('CheckBox',{on:{\"checkedChange\":function($event){return _vm.onCheckedChange($event)}},model:{value:(scope.row.selected),callback:function ($$v) {_vm.$set(scope.row, \"selected\", $$v)},expression:\"scope.row.selected\"}})]}}])}),_vm._v(\" \"),_c('GridColumn',{attrs:{\"cellCss\":\"datagrid-td-rownumber\",\"width\":\"50\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"body\",fn:function(scope){return [_vm._v(\"\\n                        \"+_vm._s(scope.rowIndex + 1)+\"\\n                    \")]}}])},[_c('template',{slot:\"header\"},[_vm._v(\"\\n                        No.\\n                    \")])],2),_vm._v(\" \"),_c('GridColumn',{attrs:{\"field\":\"scenarioName\",\"title\":\"시나리오명\",\"halign\":\"center\"}}),_vm._v(\" \"),_c('GridColumn',{attrs:{\"field\":\"loopCount\",\"title\":\"반복 횟수\",\"width\":\"60\",\"align\":\"center\"}}),_vm._v(\" \"),_c('GridColumn',{attrs:{\"title\":\"등록된 동작 개수\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"body\",fn:function(scope){return [_vm._v(\"\\n                        \"+_vm._s(scope.row.actionList.length)+\"\\n                    \")]}}])})],1)],2),_vm._v(\" \"),_c('LayoutPanel',{staticStyle:{\"width\":\"100%\",\"height\":\"100%\"},attrs:{\"region\":\"center\",\"title\":\"시나리오 내용\"}},[_c('el-form',{ref:\"scenarioForm\",attrs:{\"model\":_vm.scenarioForm,\"rules\":_vm.rules,\"label-position\":\"left\",\"label-width\":\"100px\",\"size\":\"mini\"}},[_c('el-form-item',{attrs:{\"label\":\"시나리오명\",\"prop\":\"scenarioName\"}},[_c('el-input',{attrs:{\"placeholder\":\"예약모듈 시나리오\"},model:{value:(_vm.scenarioForm.scenarioName),callback:function ($$v) {_vm.$set(_vm.scenarioForm, \"scenarioName\", $$v)},expression:\"scenarioForm.scenarioName\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"반복 횟수\",\"prop\":\"loopCount\"}},[_c('el-input-number',{attrs:{\"min\":1},model:{value:(_vm.scenarioForm.loopCount),callback:function ($$v) {_vm.$set(_vm.scenarioForm, \"loopCount\", $$v)},expression:\"scenarioForm.loopCount\"}})],1),_vm._v(\" \"),_c('el-transfer',{attrs:{\"data\":_vm.unRegisterAction,\"titles\":['미등록 동작', '등록된 동작'],\"filter-placeholder\":\"검색어 입력\",\"filterable\":\"\"},model:{value:(_vm.registerAction),callback:function ($$v) {_vm.registerAction=$$v},expression:\"registerAction\"}}),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"info\"},on:{\"click\":function($event){return _vm.saveScenario('scenarioForm')}}},[_vm._v(\"저장\")])],1),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"reserveComment\"}},[_c('br'),_c('br'),_c('br'),_vm._v(\" \"),_c('div',{staticStyle:{\"color\":\"red\"}},[_c('label',[_vm._v(\"예약은 저장 후 가능합니다.\")])]),_vm._v(\" \"),_c('br')]),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"예약날짜\",\"prop\":\"reserveTime\"}},[_c('el-input',{staticStyle:{\"width\":\"15%\"},attrs:{\"placeholder\":\"2020/10/20_14:30\",\"disabled\":this.isAddClicked},model:{value:(_vm.scenarioForm.reserveTime),callback:function ($$v) {_vm.$set(_vm.scenarioForm, \"reserveTime\", $$v)},expression:\"scenarioForm.reserveTime\"}}),_vm._v(\" \"),_c('label',{staticStyle:{\"margin-left\":\"10px\",\"color\":\"#BDBDBD\"}},[_vm._v(\" ex) 2020/09/27_02:14 (년/월/일_시:분)\")])],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"info\",\"disabled\":this.isAddClicked},on:{\"click\":function($event){return _vm.reserveScenario('scenarioForm')}}},[_vm._v(\"예약\")])],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"prop\":\"status\"}},[_c('el-input',{attrs:{\"type\":\"hidden\"},model:{value:(_vm.scenarioForm.status),callback:function ($$v) {_vm.$set(_vm.scenarioForm, \"status\", $$v)},expression:\"scenarioForm.status\"}})],1)],1)],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"삭제된 시나리오 목록\",\"visible\":_vm.dialogDeletedScenario,\"width\":\"800px\"},on:{\"update:visible\":function($event){_vm.dialogDeletedScenario=$event}}},[(_vm.deletedScenarioData.length == 0)?_c('span',[_vm._v(\"삭제된 시나리오가 없습니다\")]):_vm._e(),_vm._v(\" \"),(_vm.deletedScenarioData.length != 0)?_c('DataGrid',{staticStyle:{\"height\":\"400px\"},attrs:{\"data\":_vm.deletedScenarioData,\"loading\":_vm.deletedLoading}},[_c('GridColumn',{attrs:{\"align\":\"center\",\"cellCss\":\"datagrid-td-rownumber\",\"width\":\"30\"},scopedSlots:_vm._u([{key:\"body\",fn:function(scope){return [_vm._v(\"\\n                    \"+_vm._s(scope.rowIndex + 1)+\"\\n                \")]}}],null,false,3393989708)},[_c('template',{slot:\"header\"},[_vm._v(\"\\n                    No.\\n                \")])],2),_vm._v(\" \"),_c('GridColumn',{attrs:{\"field\":\"scenarioName\",\"title\":\"시나리오명\",\"halign\":\"center\"}}),_vm._v(\" \"),_c('GridColumn',{attrs:{\"field\":\"loopCount\",\"title\":\"반복 횟수\",\"align\":\"center\"}}),_vm._v(\" \"),_c('GridColumn',{attrs:{\"field\":\"registerActionCount\",\"title\":\"등록된 동작 개수\",\"align\":\"center\"}}),_vm._v(\" \"),_c('GridColumn',{attrs:{\"field\":\"delDt\",\"title\":\"삭제일시\",\"align\":\"center\"}}),_vm._v(\" \"),_c('GridColumn',{attrs:{\"title\":\"\",\"width\":\"50\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"body\",fn:function(scope){return [_c('LinkButton',{on:{\"click\":function($event){return _vm.recoveryScenario(scope.row)}}},[_vm._v(\"복원\")])]}}],null,false,3501991017)})],1):_vm._e()],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-f4637b96\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Scenario.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-f4637b96\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Scenario.vue\")\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-f4637b96\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=1!./Scenario.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Scenario.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Scenario.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-f4637b96\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Scenario.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-f4637b96\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Scenario.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}